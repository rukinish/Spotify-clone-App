{"ast":null,"code":"//user taken to login page after cliking button\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n//homepage onces logged in\nconst redirectUri = \"http://localhost:3000/\";\nconst cliendId = \"ba1bc611f618406aa5481086caa25fc8\";\n\n//things we r borrowing from spotify - current permissions\nconst scopes = ['user-read-currently-playing', 'user-read-recently-played', 'user-read-playback-state', 'user-top-read', 'user-modify-playback-state'];\n\n//pulling the access token from the url\nexport const loginUrl = `${authEndpoint}?client_id=${cliendId}&redirect_uri=${redirectUri}&scopes=${scopes.join(\"%20\")}&response_type=token&show_dialog=true`;\n\n//pulling the access token from the url\nexport const getTokenFromUrl = () => {\n  return window.location.hash.substring(1) //choping the url\n  .split('&') //splitting the url\n  //url=reddro&=\n  .reduce((initial, item) => {\n    let parts = item.split('=');\n    initial[parts[0]] = decodeURIComponent(parts[1]);\n    return initial;\n  }, {});\n};","map":{"version":3,"names":["authEndpoint","redirectUri","cliendId","scopes","loginUrl","join","getTokenFromUrl","window","location","hash","substring","split","reduce","initial","item","parts","decodeURIComponent"],"sources":["/Users/rukaiyanishfan/Desktop/spotify clone/spotify-clone-app/src/spotify.js"],"sourcesContent":["//user taken to login page after cliking button\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\n\n//homepage onces logged in\nconst redirectUri = \"http://localhost:3000/\";\n\nconst cliendId=\"ba1bc611f618406aa5481086caa25fc8\";\n\n//things we r borrowing from spotify - current permissions\nconst scopes = [\n    'user-read-currently-playing',\n    'user-read-recently-played',\n    'user-read-playback-state',\n    'user-top-read',\n    'user-modify-playback-state'\n];\n\n//pulling the access token from the url\nexport const loginUrl = `${authEndpoint}?client_id=${cliendId}&redirect_uri=${redirectUri}&scopes=${scopes.join(\n    \"%20\"\n)}&response_type=token&show_dialog=true`;\n\n//pulling the access token from the url\nexport const getTokenFromUrl = ()=>{\n    return window.location.hash\n    .substring(1) //choping the url\n    .split('&') //splitting the url\n    //url=reddro&=\n    .reduce((initial,item)=>{\n        let parts = item.split('=');\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n        return initial;\n    }, {});\n}\n\n\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,YAAY,GAAG,wCAAwC;;AAEpE;AACA,MAAMC,WAAW,GAAG,wBAAwB;AAE5C,MAAMC,QAAQ,GAAC,kCAAkC;;AAEjD;AACA,MAAMC,MAAM,GAAG,CACX,6BAA6B,EAC7B,2BAA2B,EAC3B,0BAA0B,EAC1B,eAAe,EACf,4BAA4B,CAC/B;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAI,GAAEJ,YAAa,cAAaE,QAAS,iBAAgBD,WAAY,WAAUE,MAAM,CAACE,IAAI,CAC3G,KACJ,CAAE,uCAAsC;;AAExC;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAI;EAC/B,OAAOC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAC1BC,SAAS,CAAC,CAAC,CAAC,CAAC;EAAA,CACbC,KAAK,CAAC,GAAG,CAAC,CAAC;EACZ;EAAA,CACCC,MAAM,CAAC,CAACC,OAAO,EAACC,IAAI,KAAG;IACpB,IAAIC,KAAK,GAAGD,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;IAC3BE,OAAO,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC;IAChD,OAAOF,OAAO;EAClB,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}